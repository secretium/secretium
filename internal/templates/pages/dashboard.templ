package pages

import "github.com/secretium/secretium/internal/templates"

script copyShareURLToClipboard() {
	// Get the text field.
	var copyText = document.getElementById("share-url");

	// Select the text field.
	copyText.select();
	copyText.setSelectionRange(0, 99999); // for mobile devices

	// Copy the text inside the text field.
	navigator.clipboard.writeText(
		`Hey, check out my secret! Go to ${copyText.value} and enter the access code to unlock it.`
	);
}

templ dashboardIndexHeader(username string) {
	<h1>Dashboard</h1>
	<p>
		&#128075;&nbsp;Hello, <strong>{ username }</strong> (
		<a
 			class="user-logout"
 			hx-get="/api/user/logout"
 			title="Logout from your account"
		>
			logout
		</a>
		)! How's your day going today?
	</p>
}

templ dashboardAddSecretHeader() {
	<h1>Add a new secret</h1>
	<p>
		&#128079;&nbsp;Let's add a new secret!
	</p>
}

templ dashboardShareSecretHeader() {
	<h1>Share secret</h1>
	<p>
		&#128076;&nbsp;Okay, let's share the secret to your friends!
	</p>
}

templ Dashboard(options *templates.DashboardComponentOptions) {
	<section id="dashboard-content">
		<div hx-get="/api/user/logout" hx-trigger="every 1800s"></div>
		<div class="grid grid-cols-3 gap-2">
			<div class="col-span-2">
				switch options.State {
					case "add-secret":
						<div class="mb-8">
							<p>
								<a href="/dashboard" title="Back to the dashboard">
									&#8592;&nbsp;Back to dashboard
								</a>
							</p>
						</div>
						@dashboardAddSecretHeader()
					case "share-secret":
						<div class="mb-8">
							<p>
								<a href="/dashboard" title="Back to the dashboard">
									&#8592;&nbsp;Back to dashboard
								</a>
							</p>
						</div>
						@dashboardShareSecretHeader()
					default:
						@dashboardIndexHeader(options.Username)
				}
			</div>
			<div class="justify-self-end">
				<img width="72px" src="/images/logo.svg" alt="secret sharer logo"/>
			</div>
		</div>
		switch options.State {
			case "add-secret":
				<div>
					<form
 						class="grid gap-2"
 						hx-post="/api/secret/add"
 						hx-target-400="#errors"
 						hx-target-500="#errors"
 						hx-indicator="#loading-indicator"
					>
						<div>
							<p>
								<label for="name">
									Name of the secret <span class="text-red-500" title="Required">&#10033;</span>
								</label>
							</p>
							<input
 								id="name"
 								class="w-full sm:w-2/3"
 								inputmode="text"
 								minlength="3"
 								maxlength="32"
 								size="32"
 								type="input"
 								name="name"
 								placeholder="Enter secret name"
 								autocomplete="off"
 								autofocus
 								required
							/>
							<div class="help-text">
								Secret name must be at least 3 characters and at most 32.
							</div>
						</div>
						<div>
							<p>
								<label for="value">
									Secret value <span class="text-red-500" title="Required">&#10033;</span>
								</label>
							</p>
							<textarea
 								id="value"
 								class="w-full"
 								minlength="1"
 								rows="4"
 								name="value"
 								placeholder="Enter secret value"
 								autocomplete="off"
 								autocorrect="off"
 								required
							></textarea>
							<div class="help-text">
								Secret value must be at least 1 character and can contain any text you want
								to make secret and pass on to your friend.
							</div>
						</div>
						<div>
							<p>
								<label for="access_code">
									Access code to unlock the secret <span class="text-red-500" title="Required">&#10033;</span>
								</label>
							</p>
							<input
 								id="access_code"
 								class="w-full sm:w-2/3"
 								inputmode="text"
 								minlength="6"
 								maxlength="32"
 								type="password"
 								name="access_code"
 								placeholder="Enter access code"
 								autocomplete="off"
 								required
							/>
							<div class="help-text">
								Access code must be at least 6 characters and at most 32. It should be strong enough.
							</div>
						</div>
						<div>
							<p>
								<label for="expires_at">
									Select the expiration time (since now)
									<span class="text-red-500" title="Required">&#10033;</span>
								</label>
							</p>
							<select
 								id="expires_at"
 								class="w-full sm:w-2/3"
 								name="expires_at"
 								required
							>
								<option value="5m">5 minutes</option>
								<option value="15m">15 minutes</option>
								<option value="30m">30 minutes</option>
								<option value="1h" selected>1 hour</option>
								<option value="3h">3 hours</option>
								<option value="12h">12 hours</option>
								<option value="1d">1 day</option>
								<option value="3d">3 days</option>
								<option value="7d">7 days</option>
								<option value="14d">14 days</option>
								<option value="30d">30 days</option>
							</select>
							<div class="help-text">
								Secret will be expired after this time since data creation.
								Minimum 5 minutes and maximum 30 days.
							</div>
							<p>
								If you want to expire this secret after first unlock, check this:
							</p>
							<label class="flex gap-2" for="is_expire_after_first_unlock">
								<input
 									id="is_expire_after_first_unlock"
 									type="checkbox"
 									name="is_expire_after_first_unlock"
								/>
								Expire after first unlock
							</label>
						</div>
						<div id="errors"></div>
						<button class="max-w-max" id="loading-indicator" type="submit">
							<svg
 								class="animate-spin h-6 w-6 text-white loader"
 								xmlns="http://www.w3.org/2000/svg"
 								fill="none"
 								viewBox="0 0 24 24"
							>
								<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
								<path
 									class="opacity-75"
 									fill="currentColor"
 									d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
								></path>
							</svg>
							<span class="loader-text">&#10003;&nbsp;Create secret</span>
						</button>
					</form>
				</div>
			case "share-secret":
				<div>
					<h2>
						ID
						<a
 							class="new-tab-link"
 							href={ templ.SafeURL("/get/" + options.Secret.Key) }
 							title="View secret"
 							target="_blank"
						>
							{ options.Secret.Key }
						</a>
					</h2>
					<div class="grid sm:grid-cols-5 items-center gap-2">
						<div class="col-span-4 self-center">
							<div>Name: <strong>{ options.Secret.Name }</strong></div>
							<div>Expires at <strong>{ options.Secret.ExpiresAt.Format("Mon, 02 Jan 2006 15:04:05") }</strong></div>
							<div>
								Is expire after unlock?
								<strong>
									if options.Secret.IsExpireAfterFirstUnlock {
										Yes, after first
									} else {
										No
									}
								</strong>
							</div>
							<div class="copy-to-clipboard" title="Copy share URL to clipboard">
								<svg
 									class="fill-blue-400 hover:fill-blue-200"
 									height="26"
 									width="26"
 									viewBox="0 0 32 32"
 									xmlns="http://www.w3.org/2000/svg"
 									onclick={ copyShareURLToClipboard() }
								>
									<g>
										<path d="m24 26c0 1.0609-.4214 2.0783-1.1716 2.8284-.7501.7502-1.7675 1.1716-2.8284 1.1716h-14c-1.06087 0-2.07828-.4214-2.82843-1.1716-.75014-.7501-1.17157-1.7675-1.17157-2.8284v-14c0-1.0609.42143-2.07828 1.17157-2.82843.75015-.75014 1.76756-1.17157 2.82843-1.17157v2c-.53043 0-1.03914.2107-1.41421.5858-.37508.3751-.58579.8838-.58579 1.4142v14c0 .5304.21071 1.0391.58579 1.4142.37507.3751.88378.5858 1.41421.5858h14c.5304 0 1.0391-.2107 1.4142-.5858s.5858-.8838.5858-1.4142z"></path><path d="m12 4c-.5304 0-1.0391.21071-1.4142.58579-.3751.37507-.5858.88378-.5858 1.41421v14c0 .5304.2107 1.0391.5858 1.4142s.8838.5858 1.4142.5858h14c.5304 0 1.0391-.2107 1.4142-.5858s.5858-.8838.5858-1.4142v-14c0-.53043-.2107-1.03914-.5858-1.41421-.3751-.37508-.8838-.58579-1.4142-.58579zm0-2h14c1.0609 0 2.0783.42143 2.8284 1.17157.7502.75015 1.1716 1.76756 1.1716 2.82843v14c0 1.0609-.4214 2.0783-1.1716 2.8284-.7501.7502-1.7675 1.1716-2.8284 1.1716h-14c-1.0609 0-2.07828-.4214-2.82843-1.1716-.75014-.7501-1.17157-1.7675-1.17157-2.8284v-14c0-1.06087.42143-2.07828 1.17157-2.82843.75015-.75014 1.76753-1.17157 2.82843-1.17157z"></path>
									</g>
								</svg>
								<input id="share-url" type="text" value={ options.ShareURL } readonly/>
							</div>
							<div id="restore-access-code">
								<p class="banner state-warning">
									&#9888;&nbsp;Please note that your friends will only be able to unlock this secret by entering
									the access code you defined when creating it! You can
									<a
 										hx-patch={ "/api/secret/restore/" + options.Secret.Key }
 										hx-target="#restore-access-code"
 										hx-confirm={ "Are you sure to restore the access code for '" + options.Secret.Name + "' (ID " + options.Secret.Key + ")? This action cannot be cancelled." }
 										title="Restore access code"
									>
										restore the access code
									</a>
									right now. It will be overwritten with a random of 8 chars.
								</p>
							</div>
						</div>
						<img class="justify-self-center" src={ "/qr/generate/" + options.Secret.Key } alt="QR code for sharing a secret"/>
					</div>
				</div>
			default:
				<div hx-get="/api/dashboard/secrets/active" hx-trigger="load, every 300s, getActiveSecrets from:body"></div>
				<div hx-get="/api/dashboard/secrets/expired" hx-trigger="load, every 300s, getExpiredSecrets from:body"></div>
				<div class="grid place-items-center text-sm italic text-slate-400 dark:text-slate-600">
					<p>
						&#9888;&nbsp;Don't forget to
						<a
 							class="user-logout"
 							hx-get="/api/user/logout"
 							title="Logout from your account"
						>
							logout
						</a>
						from your account when you're done or just press <kbd>Ctrl</kbd> / <kbd>Cmd</kbd> + <kbd>R</kbd> on the keyboard.
					</p>
				</div>
		}
	</section>
}
