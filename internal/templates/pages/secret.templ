package pages

import "github.com/secretium/secretium/internal/database"

templ Secret(secret *database.Secret, state string) {
	<section id="secret-content">
		switch state {
			case "locked":
				<h1>View secret from your friend</h1>
				<p>
					&#128064;&nbsp;To unlock the secret ID <strong>{ secret.Key }</strong>,
					please enter the access code.
				</p>
				<form
 					hx-post={ "/api/secret/unlock/" + secret.Key }
 					hx-target="#secret-content"
 					hx-target-400="#errors"
 					hx-target-404="#errors"
 					hx-target-500="#errors"
 					hx-indicator="#loading-indicator"
 					hx-swap="outerHTML"
				>
					<div>
						<p>
							<label for="access_code">
								Access code <span class="text-red-500" title="Required">&#10033;</span>
							</label>
						</p>
						<input
 							id="access_code"
 							class="w-full"
 							inputmode="text"
 							minlength="6"
 							maxlength="32"
 							type="password"
 							name="access_code"
 							placeholder="Enter access code"
 							autocomplete="off"
 							autofocus
 							required
						/>
						<div class="help-text">
							Access code must be at least 6 characters and at most 32.
						</div>
					</div>
					<div id="errors"></div>
					<button class="w-full mt-4" id="loading-indicator" type="submit">
						<svg
 							class="animate-spin h-6 w-6 text-white loader"
 							xmlns="http://www.w3.org/2000/svg"
 							fill="none"
 							viewBox="0 0 24 24"
						>
							<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
							<path
 								class="opacity-75"
 								fill="currentColor"
 								d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
							></path>
						</svg>
						<span class="loader-text">&#10003;&nbsp;Unlock secret</span>
					</button>
				</form>
			case "unlocked":
				<h1>Secret is unlocked!</h1>
				<p>
					&#127881;&nbsp;The secret ID <strong>{ secret.Key }</strong> is successfully unlocked!
				</p>
				if secret.IsExpireAfterFirstUnlock {
					<div hx-patch={ "/api/secret/expire/" + secret.Key } hx-trigger="load"></div>
					<div class="banner state-warning">
						<p>
							&#9888;&nbsp;Please note that this secret will be automatically expire after your
							<strong>first</strong> unlock! This setting was set by your friend and cannot be changed.
						</p>
					</div>
				}
				<div><strong>Name:</strong></div>
				<pre>{ secret.Name }</pre>
				<div><strong>Value:</strong></div>
				<pre>{ secret.Value }</pre>
				<div>Expires at <strong>{ secret.ExpiresAt.Format("Mon, 02 Jan 2006 15:04:05") }</strong></div>
			case "expired":
				<h1>Oops... Secret is expired!</h1>
				<div>
					<p>
						&#128533;&nbsp;Unfortunately, the live time of the secret is expired.
					</p>
					<p>
						But don't worry! Please ask your friend to renew the secret ID
						<strong>{ secret.Key }</strong> and it will be available again.
					</p>
				</div>
			default:
				<h1>Oops... Secret is not found!</h1>
				<div>
					<p>
						&#128533;&nbsp;Unfortunately, this can sometimes happen. Possible reasons:
					</p>
					<ul>
						<li>Wrong sharing link for this secret.</li>
						<li>The secret was deleted by your friend.</li>
					</ul>
					<p>
						But don't worry! Please make sure that the link your friend
						passed on is <strong>correct</strong>, or ask him/her to renew the secret ID
						<strong>{ secret.Key }</strong>.
					</p>
				</div>
		}
	</section>
}
